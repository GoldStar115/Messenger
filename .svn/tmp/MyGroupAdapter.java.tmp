//==============================================================================================================================
package com.app.adapter;

<<<<<<< .mine
=======

//==============================================================================================================================
>>>>>>> .r319
import android.app.Dialog;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.graphics.Color;
import android.os.AsyncTask;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnLongClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

//------------------------------------------------------------------------------------------------------------------------------
import com.app.messenger.BadgeView;
import com.app.messenger.GlobalConstant;
import com.app.messenger.GroupChat;
import com.app.messenger.GroupsFragment;
import com.app.messenger.R;
import com.app.model.ListALLGroups;
import com.app.util.GlobalUtills;
import com.app.webserviceshandler.Group_visibility;
import com.app.webserviceshandler.SetSilent;
import com.app.webserviceshandler.WebServiceHandler;

<<<<<<< .mine
import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;

public class MyGroupAdapter extends BaseAdapter
{
	Context                  context;
	ArrayList<ListALLGroups> list_of_allgroup;

	String       UsrId;
	GlobalUtills globalUtills;
	com.app.util.RoundedCornersGaganImageView group_image;
	ImageButton                               img_btn_delete;
	LinearLayout                              ll_chat;
	TextView                                  Group_name, /* group_created_time */
			groupType, tvtotalMembers, tvTotalmsgs, tvTotalnew;
	RelativeLayout badge_layout;

	public MyGroupAdapter(Context context, ArrayList<ListALLGroups> list_of_allgroup)
	{
		this.list_of_allgroup = list_of_allgroup;
		this.context = context;

		globalUtills = new GlobalUtills();

		SharedPreferences preferences = context.getSharedPreferences("login", Context.MODE_PRIVATE);

		UsrId = preferences.getString("UserID", "");

	}

	@Override
	public int getCount()
	{

		return list_of_allgroup.size();
	}

	@Override
	public Object getItem(int position)
	{

		return null;
	}

	@Override
	public long getItemId(int position)
	{

		return 0;
	}

	@Override
	public View getView(int position, View view, ViewGroup parent)
	{

		try
		{
=======
//------------------------------------------------------------------------------------------------------------------------------
import java.util.ArrayList;
>>>>>>> .r319

//------------------------------------------------------------------------------------------------------------------------------
import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONException;
import org.json.JSONObject;

<<<<<<< .mine
			LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			view = inflater.inflate(R.layout.group_inflator, null);
			group_image = (com.app.util.RoundedCornersGaganImageView) view.findViewById(R.id.world_group_image);
			Group_name = (TextView) view.findViewById(R.id.group_name);
			img_btn_delete = (ImageButton) view.findViewById(R.id.img_btn_delete);
			// group_created_time = (TextView)
			// view.findViewById(R.id.group_date);
			ll_chat = (LinearLayout) view.findViewById(R.id.linear_layout_chat);
			ll_chat.setId(position);
			tvtotalMembers = (TextView) view.findViewById(R.id.tvMembersMygroup);
=======
>>>>>>> .r319

//==============================================================================================================================
public class MyGroupAdapter extends BaseAdapter
{

    //--------------------------------------------------------------------------------------------------------------------------
    class RemoveGroup extends AsyncTask<String, String, String>
    {

        //----------------------------------------------------------------------------------------------------------------------
        public RemoveGroup(String group_id , int index)
        {
            this.groupId_ = group_id;
            index_        = index;
        }

        //----------------------------------------------------------------------------------------------------------------------
        @Override
        protected String doInBackground(String... params)
        {
            ArrayList<NameValuePair> param = new ArrayList<NameValuePair>();

<<<<<<< .mine
			if (position % 2 != 0)
			{
				view.setBackgroundColor(Color.parseColor("#ebebeb"));
			}
			else
			{
				view.setBackgroundColor(Color.parseColor("#ffffff"));
			}
=======
            param.add(new BasicNameValuePair(GlobalConstant.POST_TYPE, "post"));
            param.add(new BasicNameValuePair(GlobalConstant.U_TYPE,    "remove_group_user"));
            param.add(new BasicNameValuePair("userid",                 global_.getUser_id()));
            param.add(new BasicNameValuePair("groupid",                this.groupId_));
>>>>>>> .r319

<<<<<<< .mine
			if (!(list_of_allgroup.get(position).getUnread().equals("") || list_of_allgroup.get(position).getUnread().equals("0")))
			{
				GlobalUtills.badgeSenderGroupChat.setBadgePosition(BadgeView.POSITION_TOP_RIGHT);
				GlobalUtills.badgeSenderGroupChat.setText(list_of_allgroup.get(position).getUnread());
				GlobalUtills.badgeSenderGroupChat.show();
			}
=======
            Log.e("parametersValue of  world Group" + "", params.toString());
>>>>>>> .r319

            try
            {
                responseRemoveGroup_ = (new WebServiceHandler()).makeServiceCall(GlobalConstant.URL, WebServiceHandler.GET,
                                                                                 param);
            }
            catch (Exception exception)
            {
                exception.printStackTrace();
            }

            return responseRemoveGroup_;
        }

        //----------------------------------------------------------------------------------------------------------------------
        @Override
        protected void onPreExecute()
        {
            super.onPreExecute();

<<<<<<< .mine
					if (GlobalUtills.badgeGroup != null)
					{
						if (GlobalUtills.badgeGroup.isShown())
						{
							GlobalUtills.msgCountGroup = "";
							GlobalUtills.badgeGroup.toggle();
=======
            dialog_ = new ProgressDialog(context_);
>>>>>>> .r319

            dialog_.setMessage("Deleting...");
            dialog_.show      ();
        }

        //----------------------------------------------------------------------------------------------------------------------
        protected void onPostExecute(String result)
        {
            try
            {
                JSONObject jsonObject = new JSONObject(result);

<<<<<<< .mine
					Intent gotoChatting = new Intent(context, GroupChat.class);
					gotoChatting.putExtra("groupID", list_of_allgroup.get(ll_chat.getId()).getGroupId() + "");
					gotoChatting.putExtra("groupName", list_of_allgroup.get(ll_chat.getId()).getName() + "");
=======
                messageString_ = jsonObject.getString(GlobalConstant.MESSAGE);
>>>>>>> .r319

<<<<<<< .mine
					gotoChatting.putExtra("groupImage", list_of_allgroup.get(ll_chat.getId()).getImage() + "");
=======
                if (!messageString_.equalsIgnoreCase(GlobalConstant.SUCCESS))
                    GlobalUtills.showToast("Oops..!An error has been encountered..!", context_);
>>>>>>> .r319

<<<<<<< .mine
					GlobalUtills.mygroups_savelocal = true;
					context.startActivity(gotoChatting);
					if (!(list_of_allgroup.get(ll_chat.getId()).getUnread().equals("0")))
					{
						list_of_allgroup.get(ll_chat.getId()).setUnread("0");
=======
                else
                {
                    GroupsFragment.allGroupsList().remove(index_);
                    GroupsFragment.groupAdapter().notifyDataSetChanged();
>>>>>>> .r319

                    SharedPreferences sharedChatDataS = context_.getSharedPreferences("Chat", Context.MODE_PRIVATE);
                    Editor            editSHared      = sharedChatDataS.edit();

<<<<<<< .mine
				}
			});


			ll_chat.setOnLongClickListener(new OnLongClickListener()
			{

				@Override
				public boolean onLongClick(View arg0)
				{
=======
                    editSHared.remove(this.groupId_);
                    editSHared.commit();
>>>>>>> .r319

                    GlobalUtills.showToast("Group left successfully.!", context_);
                }

                if (dialog_.isShowing())
                    dialog_.dismiss();
            }
            catch (JSONException e)
            {
                if (dialog_.isShowing())
                    dialog_.dismiss();

                e.printStackTrace();
            }

<<<<<<< .mine
					TextView subheading = (TextView) dialog.findViewById(R.id.txtVsubheading);
					subheading.setTextSize(15);
					subheading.setText("Select an option for group");
=======
            if (dialog_.isShowing())
                dialog_.dismiss();
>>>>>>> .r319

<<<<<<< .mine
					Button      btn_Chat   = (Button) dialog.findViewById(R.id.btnChat);
					Button      btn_call   = (Button) dialog.findViewById(R.id.btncall);
					Button      btn_groups = (Button) dialog.findViewById(R.id.btngroups);
					ImageButton btn_close  = (ImageButton) dialog.findViewById(R.id.btnCloseDialog);
=======
            super.onPostExecute(result);
        }
>>>>>>> .r319

<<<<<<< .mine
					btn_close.setVisibility(View.GONE);
=======
        //----------------------------------------------------------------------------------------------------------------------
        private ProgressDialog dialog_;
        private String         responseRemoveGroup_;
        private String         messageString_;
        private String         groupId_             = "";
        private int            index_;
    }
>>>>>>> .r319

<<<<<<< .mine
					btn_call.setText("Silent");
					btn_Chat.setText("Leave");


//					SharedPreferences preferences = context.getSharedPreferences("Chat", Context.MODE_PRIVATE);
					 final boolean     visibility;

					if (list_of_allgroup.get(ll_chat.getId()).getGroupIsVisible().equals("Y"))
					{
						btn_groups.setText("Invisible");
						visibility=true;
					}
					else
					{
						btn_groups.setText("Visible");
						visibility=false;
					}

					final String silentFlag;

					if (list_of_allgroup.get(ll_chat.getId()).getGroupIsSilent().equals("N"))
					{

						btn_call.setText("Silent");
						silentFlag="Y";
					}
					else
					{
						btn_call.setText("Notified");
						silentFlag="";
					}





					btn_groups.setOnClickListener(new OnClickListener()
					{
						@Override
						public void onClick(View v)
						{

							dialog.dismiss();
							new Group_visibility(context, UsrId, list_of_allgroup.get(ll_chat.getId()).getGroupId(), visibility).execute();

						}
					});
=======
    //--------------------------------------------------------------------------------------------------------------------------
    public MyGroupAdapter(Context context , ArrayList<ListALLGroups> allGroupList)
    {
        this.allGroup_ = allGroupList;
        this.context_  = context;
        global_        = new Global();
        globalUtills_  = new GlobalUtills();
>>>>>>> .r319

    }

<<<<<<< .mine
						@Override
						public void onClick(View v)
						{
							dialog.dismiss();
							new SetSilent(context, UsrId, list_of_allgroup.get(ll_chat.getId()).getGroupId(), silentFlag).execute();
						}
					});


					btn_Chat.setOnClickListener(new OnClickListener()
					{
						@Override
						public void onClick(View v)
						{
							dialog.dismiss();
							new RemoveGroup(list_of_allgroup.get(ll_chat.getId()).getGroupId(), ll_chat.getId()).execute();
						}
					});
=======
    //--------------------------------------------------------------------------------------------------------------------------
    @Override
    public int getCount()
    {
        return allGroup_.size();
    }
>>>>>>> .r319

<<<<<<< .mine

					dialog.show();
=======
    //--------------------------------------------------------------------------------------------------------------------------
    @Override
    public Object getItem(int position)
    {
        return null;
    }
>>>>>>> .r319

    //--------------------------------------------------------------------------------------------------------------------------
    @Override
    public long getItemId(int position)
    {
        return 0;
    }

<<<<<<< .mine
					return true;
				}
			});
=======
    //--------------------------------------------------------------------------------------------------------------------------
    @Override
    public View getView(int position, View view, ViewGroup parent)
    {
        try
        {
            final int            index    = position;
                  LayoutInflater inflater = (LayoutInflater) context_.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
>>>>>>> .r319

<<<<<<< .mine
=======
            view            = inflater.inflate(R.layout.group_inflator, null);
            groupImage_     = (com.app.util.RoundedCornersGaganImageView)
                                               view.findViewById(R.id.world_group_image);
            groupName_      = (TextView)       view.findViewById(R.id.group_name);
            llChat_         = (LinearLayout)   view.findViewById(R.id.linear_layout_chat);
            tvTotalMembers_ = (TextView)       view.findViewById(R.id.tvMembersMygroup);
            tvTotalMsgs_    = (TextView)       view.findViewById(R.id.tvtotalmsgsMygroup);
            tvTotalNew_     = (TextView)       view.findViewById(R.id.tvTotalnewMygroup);
            groupType_      = (TextView)       view.findViewById(R.id.groupType);
            badgeLayout_    = (RelativeLayout) view.findViewById(R.id.badge_indicator_group_chat);
            GlobalUtills.badgeSenderGroupChat
                            = new BadgeView(context_, badgeLayout_);
>>>>>>> .r319

<<<<<<< .mine
			Group_name.setText(list_of_allgroup.get(position).getName());
			// group_created_time.setText(globalUtills.parseDateMYgroups(list_of_allgroup.get(position).getAddedDate()));
			// group_created_time.setSelected(true);
			if (list_of_allgroup.get(position).getType().equals("P"))
			{
				groupType.setText("Public");
				groupType.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.vault, 0);
			}
			else
			{
				groupType.setText("Private");
				groupType.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.lock, 0);
			}
=======
            view.setBackgroundColor(position % 2 != 0 ? GlobalConstant.COLOR_GREY : GlobalConstant.COLOR_WHITE);
>>>>>>> .r319

            if (!(allGroup_.get(position).getUnread().equals("") || allGroup_.get(position).getUnread().equals("0")))
            {
                GlobalUtills.badgeSenderGroupChat.setBadgePosition(BadgeView.POSITION_TOP_RIGHT);
                GlobalUtills.badgeSenderGroupChat.setText         (allGroup_.get(position).getUnread());
                GlobalUtills.badgeSenderGroupChat.show            ();
            }

<<<<<<< .mine
			if (!list_of_allgroup.get(position).getImage().equalsIgnoreCase(""))
			{
				try
				{
=======
            llChat_.setOnClickListener(new OnClickListener()
            {
                @Override
                public void onClick(View v)
                {
                    GlobalUtills.joinORadd_group = true;
>>>>>>> .r319

                    if (GlobalUtills.badgeGroup != null && GlobalUtills.badgeGroup.isShown())
                    {
                        GlobalUtills.msgCountGroup = "";

<<<<<<< .mine
				} catch (Exception e)
				{
					e.printStackTrace();
				} catch (OutOfMemoryError e)
				{
					e.printStackTrace();
				}
			}
			else
			{
				group_image.setImageResource(R.drawable.group_image_public);
			}
=======
                        GlobalUtills.badgeGroup.toggle();
>>>>>>> .r319

<<<<<<< .mine
		} catch (Exception e)
		{
			e.printStackTrace();
		} catch (Error e)
		{
=======
                        SharedPreferences sharedPref = context_.getSharedPreferences("login", Context.MODE_PRIVATE);
                        Editor            editorPref = sharedPref.edit();
>>>>>>> .r319

                        editorPref.remove("notification_flag_mychat");
                        editorPref.commit();
                    }

                    Intent gotoChatting = new Intent(context_, GroupChat.class);

<<<<<<< .mine
=======
                    gotoChatting.putExtra("groupID",    allGroup_.get(index).getGroupId() + "");
                    gotoChatting.putExtra("groupName",  allGroup_.get(index).getName() + "");
                    gotoChatting.putExtra("groupImage", allGroup_.get(index).getImage() + "");

>>>>>>> .r319
<<<<<<< .mine
	// asyn class to remove group
	class RemoveGroup extends AsyncTask<String, String, String>
	{
		ProgressDialog dialog;
		String         response_RemoveGroup;
		String messaString, group_id = "";
		int indx;
=======
                    GlobalUtills.mygroups_savelocal = true;
>>>>>>> .r319

<<<<<<< .mine
		public RemoveGroup(String group_id, int index)
		{
			this.group_id = group_id;
			indx = index;
		}
=======
                    context_.startActivity(gotoChatting);
>>>>>>> .r319

                    if (!(allGroup_.get(index).getUnread().equals("0")))
                    {
                        allGroup_.get(index).setUnread("0");

                        GroupsFragment.groupAdapter().notifyDataSetChanged();
                    }
                }
            });


<<<<<<< .mine
			param.add(new BasicNameValuePair(GlobalConstant.U_TYPE, "remove_group_user"));
			param.add(new BasicNameValuePair("userid", UsrId));
			param.add(new BasicNameValuePair("groupid", this.group_id));
=======
            llChat_.setOnLongClickListener(new OnLongClickListener()
            {
                @Override
                public boolean onLongClick(View arg0)
                {
                    final Dialog dialog = globalUtills_.prepararDialog(context_, R.layout.dialog_three_options);
>>>>>>> .r319

                    TextView title = (TextView) dialog.findViewById(R.id.txtVmainTitle);

<<<<<<< .mine
=======
                    title.setText("Get Groupy");

>>>>>>> .r319
                    TextView subheading = (TextView) dialog.findViewById(R.id.txtVsubheading);

                    subheading.setTextSize(15);
                    subheading.setText    ("Are you sure,you want to leave the group ?");

<<<<<<< .mine
			} catch (Exception exception)
			{
				exception.printStackTrace();
			}
=======
                    Button buttonChat       = (Button)      dialog.findViewById(R.id.btnChat);
                    Button buttonCall       = (Button)      dialog.findViewById(R.id.btncall);
                    Button buttonGroups     = (Button)      dialog.findViewById(R.id.btngroups);
                    ImageButton buttonClose = (ImageButton) dialog.findViewById(R.id.btnCloseDialog);
>>>>>>> .r319

                    buttonGroups.setVisibility(View.GONE);
                    buttonClose.setVisibility(View.GONE);

                    buttonCall.setText("Yes");
                    buttonChat.setText("No");

                    buttonChat.setOnClickListener(new OnClickListener()
                    {
                        @Override
                        public void onClick(View v)
                        {
                            dialog.dismiss();
                        }
                    });

                    buttonCall.setOnClickListener(new OnClickListener()
                    {
                        @Override
                        public void onClick(View v)
                        {
                            new RemoveGroup(allGroup_.get(index).getGroupId(), index).execute();
                            dialog.dismiss();
                        }
                    });

                    dialog.show();

<<<<<<< .mine
			try
			{
				JSONObject jsonObject = new JSONObject(result);
				messaString = jsonObject.getString("Message");
				if (messaString.equalsIgnoreCase("Success"))
				{
=======
                    return true;
                }
            });
>>>>>>> .r319

            groupName_.setText(allGroup_.get(position).getName());

            if (allGroup_.get(position).getType().equals("P"))
            {
                groupType_.setText("Public");
                groupType_.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.vault, 0);
            }
            else
            {
                groupType_.setText("Private");
                groupType_.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.lock, 0);
            }

            tvTotalMembers_.setText("Members:" + allGroup_.get(position).getTotalmembers());
            tvTotalMsgs_.setText("Total Msgs:" + allGroup_.get(position).getTotalmsgs());
            tvTotalNew_.setText("Total New:" + allGroup_.get(position).getTotalnew());

            if (allGroup_.get(position).getImage().equalsIgnoreCase(""))
                groupImage_.setImageResource(R.drawable.group_image_public);

<<<<<<< .mine
				if (dialog.isShowing())
				{
					dialog.dismiss();
				}
=======
            else
            {
                try
                {
                    groupImage_.setRadius  (GlobalConstant.IMAGE_CONNERS_RADIUS);
                    groupImage_.setImageUrl(context_, allGroup_.get(position).getImage());
                }
                catch (Exception e)
                {
                    e.printStackTrace();
                }
                catch (OutOfMemoryError e)
                {
                    e.printStackTrace();
                }
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        catch (Error e)
        {
        }
>>>>>>> .r319

<<<<<<< .mine
			} catch (JSONException e)
			{
				if (dialog.isShowing())
				{
					dialog.dismiss();
				}
				e.printStackTrace();
			}
			if (dialog.isShowing())
			{
				dialog.dismiss();
			}
=======
        return view;
    }
>>>>>>> .r319

    //--------------------------------------------------------------------------------------------------------------------------
    private Context                                   context_;
    private ArrayList<ListALLGroups>                  allGroup_;
    private Global                                    global_;
    private GlobalUtills                              globalUtills_;
    private com.app.util.RoundedCornersGaganImageView groupImage_;
    private LinearLayout                              llChat_;
    private TextView                                  groupName_;
    private TextView                                  groupType_;
    private TextView                                  tvTotalMembers_;
    private TextView                                  tvTotalMsgs_;
    private TextView                                  tvTotalNew_;
    private RelativeLayout                            badgeLayout_;
}
